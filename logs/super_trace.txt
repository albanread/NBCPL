NewBCPL Compiler Version 1.0.1420
Transforming SUPER calls...
[SuperCallTransformationPass] Starting SUPER call transformation pass
[SuperCallTransformationPass] Visiting Program node
[SuperCallTransformationPass] Entering class: Point
[SuperCallTransformationPass] Entering method: getX
[SuperCallTransformationPass] Entering method: getY
[SuperCallTransformationPass] Exiting class: Point
[SuperCallTransformationPass] Entering class: ColorPoint
[SuperCallTransformationPass] Entering method: getColor
[SuperCallTransformationPass] Exiting class: ColorPoint
[SuperCallTransformationPass] No SUPER calls found - program unchanged
SUPER call transformation complete.
Building Control Flow Graphs...
[FIX] Cleared FOR loop state before CFGBuilderPass to prevent corruption
[CFGBuilderPass] build() called.
[CFGBuilderPass] About to accept(Program)
[CFGBuilderPass] visit(Program) called.
[CFGBuilderPass] Processing declaration #0
[CFGBuilderPass] Found ClassDecl at index 0
[CFGBuilderPass] Processing class: Point
[CFGBuilderPass] Found routine method 'CREATE' in class 'Point'
[CFGBuilderPass] Using qualified name for method: Point::CREATE
[CFGBuilderPass] Creating CFG for routine: Point::CREATE
[CFGBuilderPass] Created CFG for routine: Point::CREATE
[CFGBuilderPass] Created new basic block: Point::CREATE_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: Point::CREATE (call tree)
[CFGBuilderPass] Starting optimized block 1 variable tracking
[CFGBuilderPass] Created new basic block: Point::CREATE_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] Found function method 'getX' in class 'Point'
[CFGBuilderPass] Using qualified name for method: Point::getX
[CFGBuilderPass] visit(FunctionDeclaration) for function: Point::getX
[CFGBuilderPass] Created CFG for function: Point::getX
[CFGBuilderPass] Created new basic block: Point::getX_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: Point::getX (leaf)
[CFGBuilderPass] Starting optimized block 2 variable tracking
[CFGBuilderPass] SAMM: Visiting ResultisStatement - SAMM disabled, no scope exit call injected.
[CFGBuilderPass] Visiting ResultisStatement - injecting scope cleanup.
[CFGBuilderPass] Created new basic block: Point::getX_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] visit(FunctionDeclaration) complete for function: getX
[CFGBuilderPass] Found function method 'getY' in class 'Point'
[CFGBuilderPass] Using qualified name for method: Point::getY
[CFGBuilderPass] visit(FunctionDeclaration) for function: Point::getY
[CFGBuilderPass] Created CFG for function: Point::getY
[CFGBuilderPass] Created new basic block: Point::getY_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: Point::getY (leaf)
[CFGBuilderPass] Starting optimized block 3 variable tracking
[CFGBuilderPass] SAMM: Visiting ResultisStatement - SAMM disabled, no scope exit call injected.
[CFGBuilderPass] Visiting ResultisStatement - injecting scope cleanup.
[CFGBuilderPass] Created new basic block: Point::getY_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] visit(FunctionDeclaration) complete for function: getY
[CFGBuilderPass] Found routine method 'set' in class 'Point'
[CFGBuilderPass] Using qualified name for method: Point::set
[CFGBuilderPass] Creating CFG for routine: Point::set
[CFGBuilderPass] Created CFG for routine: Point::set
[CFGBuilderPass] Created new basic block: Point::set_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: Point::set (leaf)
[CFGBuilderPass] Starting optimized block 4 variable tracking
[CFGBuilderPass] Created new basic block: Point::set_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] Found routine method 'RELEASE' in class 'Point'
[CFGBuilderPass] Using qualified name for method: Point::RELEASE
[CFGBuilderPass] Creating CFG for routine: Point::RELEASE
[CFGBuilderPass] Created CFG for routine: Point::RELEASE
[CFGBuilderPass] Created new basic block: Point::RELEASE_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: Point::RELEASE (call tree)
[CFGBuilderPass] Starting optimized block 5 variable tracking
[CFGBuilderPass] Created new basic block: Point::RELEASE_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] Processing declaration #1
[CFGBuilderPass] Found ClassDecl at index 1
[CFGBuilderPass] Processing class: ColorPoint
[CFGBuilderPass] Found routine method 'CREATE' in class 'ColorPoint'
[CFGBuilderPass] Using qualified name for method: ColorPoint::CREATE
[CFGBuilderPass] Creating CFG for routine: ColorPoint::CREATE
[CFGBuilderPass] Created CFG for routine: ColorPoint::CREATE
[CFGBuilderPass] Created new basic block: ColorPoint::CREATE_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: ColorPoint::CREATE (call tree)
[CFGBuilderPass] Starting optimized block 6 variable tracking
[CFGBuilderPass] Created new basic block: ColorPoint::CREATE_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] Found routine method 'setColor' in class 'ColorPoint'
[CFGBuilderPass] Using qualified name for method: ColorPoint::setColor
[CFGBuilderPass] Creating CFG for routine: ColorPoint::setColor
[CFGBuilderPass] Created CFG for routine: ColorPoint::setColor
[CFGBuilderPass] Created new basic block: ColorPoint::setColor_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: ColorPoint::setColor (leaf)
[CFGBuilderPass] Starting optimized block 7 variable tracking
[CFGBuilderPass] Created new basic block: ColorPoint::setColor_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] Found function method 'getColor' in class 'ColorPoint'
[CFGBuilderPass] Using qualified name for method: ColorPoint::getColor
[CFGBuilderPass] visit(FunctionDeclaration) for function: ColorPoint::getColor
[CFGBuilderPass] Created CFG for function: ColorPoint::getColor
[CFGBuilderPass] Created new basic block: ColorPoint::getColor_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[SAMM OPTIMIZATION] Skipping scope calls for allocation-free function: ColorPoint::getColor (leaf)
[CFGBuilderPass] Starting optimized block 8 variable tracking
[CFGBuilderPass] SAMM: Visiting ResultisStatement - SAMM disabled, no scope exit call injected.
[CFGBuilderPass] Visiting ResultisStatement - injecting scope cleanup.
[CFGBuilderPass] Created new basic block: ColorPoint::getColor_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] visit(FunctionDeclaration) complete for function: getColor
[CFGBuilderPass] Processing declaration #2
[CFGBuilderPass] Found RoutineDecl at index 2
[CFGBuilderPass] Creating CFG for routine: START
[CFGBuilderPass] Created CFG for routine: START
[CFGBuilderPass] Created new basic block: START_Entry_0
[CFGBuilderPass] Visiting BlockStatement with SAMM scope management.
[CFGBuilderPass] SAMM: Injecting HeapManager_enter_scope() call at block start
[CFGBuilderPass] CFGBuilderPass: Registered HeapManager_enter_scope call site at instruction 174 for function 'START'
[CFGBuilderPass] Starting block 9 variable tracking
[CFGBuilderPass] Tracking variable 'p' in current block
[CFGBuilderPass] Tracking variable 'cp' in current block
[CFGBuilderPass] Generating normal block-end cleanup for 2 variables
[CFGBuilderPass] Generating block-end cleanup for: cp
[CFGBuilderPass] Generating block-end cleanup for: p
[CFGBuilderPass] SAMM: Injecting HeapManager_exit_scope() call for normal block exit
[CFGBuilderPass] CFGBuilderPass: Registered HeapManager_exit_scope call site at instruction 175 for function 'START'
[CFGBuilderPass] Created new basic block: START_Exit_1
[CFGBuilderPass] Resolving 0 GOTO statements...
[CFGBuilderPass] visit(Program) complete.
[CFGBuilderPass] Finished accept(Program)
[CFGBuilderPass] build() complete.

[CFGBuilderPass] --- DUMPING ALL CFGs ---
[CFGBuilderPass] CFG found for: START
[CFGBuilderPass] CFG found for: ColorPoint::setColor
[CFGBuilderPass] CFG found for: ColorPoint::CREATE
[CFGBuilderPass] CFG found for: Point::getY
[CFGBuilderPass] CFG found for: Point::RELEASE
[CFGBuilderPass] CFG found for: Point::getX
[CFGBuilderPass] CFG found for: ColorPoint::getColor
[CFGBuilderPass] CFG found for: Point::set
[CFGBuilderPass] CFG found for: Point::CREATE
[CFGBuilderPass] --- END CFG DUMP ---

CFG for function: START
----------------------------------------
Entry Block: START_Entry_0
Exit Block: START_Exit_1 (conceptual)

Block ID: START_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: START_Entry_0

Block ID: START_Entry_0 (Entry)
  Statements:
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - AssignmentStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - AssignmentStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
  Successors: START_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: ColorPoint::setColor
----------------------------------------
Entry Block: ColorPoint::setColor_Entry_0
Exit Block: ColorPoint::setColor_Exit_1 (conceptual)

Block ID: ColorPoint::setColor_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: ColorPoint::setColor_Entry_0

Block ID: ColorPoint::setColor_Entry_0 (Entry)
  Statements:
    - AssignmentStmt
  Successors: ColorPoint::setColor_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: ColorPoint::CREATE
----------------------------------------
Entry Block: ColorPoint::CREATE_Entry_0
Exit Block: ColorPoint::CREATE_Exit_1 (conceptual)

Block ID: ColorPoint::CREATE_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: ColorPoint::CREATE_Entry_0

Block ID: ColorPoint::CREATE_Entry_0 (Entry)
  Statements:
    - RoutineCallStmt
    - AssignmentStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
  Successors: ColorPoint::CREATE_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: Point::getY
----------------------------------------
Entry Block: Point::getY_Entry_0
Exit Block: Point::getY_Exit_1 (conceptual)

Block ID: Point::getY_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: Point::getY_Entry_0

Block ID: Point::getY_Entry_0 (Entry)
  Statements:
    - ResultisStmt
  Successors: Point::getY_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: Point::RELEASE
----------------------------------------
Entry Block: Point::RELEASE_Entry_0
Exit Block: Point::RELEASE_Exit_1 (conceptual)

Block ID: Point::RELEASE_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: Point::RELEASE_Entry_0

Block ID: Point::RELEASE_Entry_0 (Entry)
  Statements:
    - RoutineCallStmt
  Successors: Point::RELEASE_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: Point::getX
----------------------------------------
Entry Block: Point::getX_Entry_0
Exit Block: Point::getX_Exit_1 (conceptual)

Block ID: Point::getX_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: Point::getX_Entry_0

Block ID: Point::getX_Entry_0 (Entry)
  Statements:
    - ResultisStmt
  Successors: Point::getX_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: ColorPoint::getColor
----------------------------------------
Entry Block: ColorPoint::getColor_Entry_0
Exit Block: ColorPoint::getColor_Exit_1 (conceptual)

Block ID: ColorPoint::getColor_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: ColorPoint::getColor_Entry_0

Block ID: ColorPoint::getColor_Entry_0 (Entry)
  Statements:
    - ResultisStmt
  Successors: ColorPoint::getColor_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: Point::set
----------------------------------------
Entry Block: Point::set_Entry_0
Exit Block: Point::set_Exit_1 (conceptual)

Block ID: Point::set_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: Point::set_Entry_0

Block ID: Point::set_Entry_0 (Entry)
  Statements:
    - AssignmentStmt
    - AssignmentStmt
  Successors: Point::set_Exit_1
  Predecessors: (none)
----------------------------------------

CFG for function: Point::CREATE
----------------------------------------
Entry Block: Point::CREATE_Entry_0
Exit Block: Point::CREATE_Exit_1 (conceptual)

Block ID: Point::CREATE_Exit_1 (Exit)
  Statements:
    (empty)
  Successors: (none)
  Predecessors: Point::CREATE_Entry_0

Block ID: Point::CREATE_Entry_0 (Entry)
  Statements:
    - AssignmentStmt
    - AssignmentStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
    - RoutineCallStmt
  Successors: Point::CREATE_Exit_1
  Predecessors: (none)
----------------------------------------
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: 
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X0 
[COERCE_DEBUG] Integer: X0 -> X0
[COERCE_DEBUG] Executed 0 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: arg0=X9 
[COERCE_DEBUG] Integer: X9 -> X0
[COERCE_DEBUG] Executed 1 queued operations
[COERCE_DEBUG] Input argument registers: 
[COERCE_DEBUG] Executed 0 queued operations
Testing class member variable access with correct offsets
=================================================

1. Basic Point class test:
Point created at (50, 75)
Reading values: x=50, y=75
Setting new values...
Reading new values: x=100, y=200

2. Inherited ColorPoint class test:
Point created at (130, 140)
ColorPoint created at (130, 140) with color 0
Reading values: x=130, y=140, color=0
Setting new values...
Reading new values: x=60, y=80, color=123

Test completed successfully
